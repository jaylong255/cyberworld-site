name: TF CI/CD
on:
  push:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yaml'
    branches:
      - main
  pull_request:
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yaml'
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform/

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v3
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('terraform/.tflint.hcl') }}

    - name: Get Terraform version
      id: tf_version
      run: |
        terraform_version="$(cat ./terraform_version)"
        echo "terraform_version = $terraform_version"
        echo "version=$terraform_version" >> $GITHUB_OUTPUT

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ steps.tf_version.outputs.version }}
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        env: |
          TF_VAR_certificate_arn=${{ secrets.CERTIFICATE_ARN }}

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform TF_VAR_certificate_arn=${{ secrets.CERTIFICATE_ARN }} plan -no-color -input=false
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform TF_VAR_certificate_arn=${{ secrets.CERTIFICATE_ARN }} apply -auto-approve -input=false